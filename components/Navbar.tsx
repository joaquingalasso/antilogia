

import * as React from 'react';
import { useLanguage } from '../contexts/LanguageContext';
import { LanguageToggle } from './LanguageToggle';
import { ThemeToggle } from './ThemeToggle';
import type { Theme } from '../types';

interface NavbarProps {
    theme: Theme;
    toggleTheme: () => void;
}

// The original logo, used for the light theme. It's a clean outline.
const LogoLight = () => (
    <svg width="40" height="40" viewBox="0 0 130 230" aria-hidden="true">
        <defs>
            <style dangerouslySetInnerHTML={{ __html: `
              .cls-1 {
                fill: #f17c0a;
              }
        
              .cls-2 {
                fill: #e43c00;
              }
            `}} />
        </defs>
        <path className="cls-2" d="M77.13,1.28c-13.1,2.79-25.1,10.11-34.58,21.31-10.75,12.68-17.11,29.04-18.22,46.55h0c2.22-25.29,19.64-45.04,40.73-45.04,4.11,0,8.17.77,12.05,2.25,4.24,1.63,8.25,4.09,11.87,7.31,2.27,2.02,5.13,3.07,7.99,3.07,2.41,0,4.83-.74,6.9-2.27l.52-.38c1.6-1.18,2.8-2.67,3.6-4.32,2.19-4.53,1.33-10.23-2.73-13.88-8.22-7.39-17.86-12.4-28.14-14.6h0Z"/>
        <path className="cls-1" d="M77.08,147.96c-3.89.86-7.91,1.3-12,1.3-17.77,0-34.35-8.03-46.69-22.6C6.53,112.68,0,94.2,0,74.63S6.53,36.59,18.39,22.59C30.73,8.02,47.31,0,65.08,0c4.08,0,8.11.43,12.06,1.28-13.1,2.79-25.1,10.11-34.57,21.31-10.75,12.68-17.11,29.04-18.21,46.55v.02c-.17,1.8-.24,3.62-.24,5.47s.08,3.67.24,5.47h0c1.09,17.53,7.47,33.89,18.21,46.57,9.47,11.18,21.44,18.51,34.52,21.3Z"/>
        <path className="cls-2" d="M126.73,187.89c-3.2,18.85-17.11,34.33-35.5,39.13-2.85.74-5.79,1.21-8.83,1.42-1.1.08-2.18.12-3.26.12-15.36,0-29.47-7.28-38.45-19.04-1.61-2.1-2.35-4.54-2.35-6.92s.68-4.55,1.97-6.46c1.32-1.99,3.27-3.57,5.76-4.44,1.43-.5,2.91-.75,4.37-.75,3.79,0,7.48,1.61,9.95,4.64.86,1.04,1.82,2.04,2.85,2.93,4.31,3.74,9.91,5.93,15.88,5.93.27,0,.55,0,.83-.01.27,0,.54-.03.81-.04.54-.03,1.08-.06,1.62-.12h.01c4.04-.25,8.01-.79,11.89-1.59,11.75-2.42,22.64-7.31,31.85-14.35h0c.19-.15.39-.3.58-.45Z"/>
        <path className="cls-1" d="M127.44,90.81v88.78c0,1.55-.08,3.07-.22,4.58-.23,1.43-.59,2.82-1.07,4.16h0c-9.21,7.05-20.1,11.94-31.85,14.36-3.88.8-7.85,1.34-11.89,1.59h-.01c-.54.05-1.08.09-1.62.12,1.62-.12,3.21-.37,4.73-.79,2.02-.55,3.95-1.37,5.72-2.4,7.26-4.19,12.15-12.03,12.15-20.99v-46.04l-.04.04v-41.39l.04-.21v-1.82h24.06Z"/>
        <path className="cls-2" d="M127.22,184.17c-.12,1.25-.28,2.5-.49,3.73-.19.15-.39.3-.58.44.48-1.34.84-2.73,1.07-4.16Z"/>
        <path className="cls-2" d="M103.28,66.7h-33.75c-3.33,0-6.34,1.35-8.52,3.53-2.18,2.19-3.52,5.19-3.52,8.52,0,2.5.75,4.81,2.06,6.74,2.16,3.21,5.83,5.32,9.99,5.32h57.9-24.16v-24.11"/>
        <path className="cls-2" d="M115.39,66.7h-12.11v24.11h24.16v-12.19c0-.28,0-.58-.03-.85,0-.1-.02-.18-.02-.26-.23-2.29-1.11-4.39-2.46-6.12-1.72-2.22-4.21-3.84-7.08-4.43-.13-.02-.24-.05-.37-.07-.67-.12-1.38-.19-2.09-.19"/>
        <path className="cls-2" d="M103.33,92.83v41.39c-.37.34-.74.67-1.12,1-.28.24-.57.49-.86.72l-.07.06c-.14.11-.27.21-.4.33-.17.13-.32.26-.48.39-1.02.81-2.04,1.59-3.09,2.32-.39.27-.79.54-1.19.8-.14.09-.26.19-.4.27-.08.05-.15.09-.22.14-.13.09-.26.17-.39.25-.29.2-.59.38-.89.56-.23.15-.48.29-.72.43-.34.2-.69.41-1.04.61-.56.31-1.11.61-1.67.9-.67.35-1.36.69-2.04,1.01-.46.21-.92.42-1.39.62-.08.04-.17.08-.25.11-.39.18-.79.34-1.19.5-.57.23-1.14.46-1.73.66-.58.21-1.15.41-1.74.61h0c-.59.2-1.17.37-1.77.55-.6.18-1.19.33-1.79.49-.6.16-1.2.29-1.81.43-13.08-2.79-25.05-10.12-34.52-21.3-10.75-12.68-17.12-29.04-18.21-46.56,2.22,25.29,19.64,45.06,40.73,45.06,3.21,0,6.35-.2,9.39-.73,1.31-.21,2.58-.51,3.84-.85.14-.04.28-.07.43-.11,11.08-3.16,20.22-11.5,24.6-30.64Z"/>
    </svg>
);

// A more stylized version for the dark theme, featuring a glow effect.
const LogoDark = () => (
    <svg width="40" height="40" viewBox="0 0 130 230" aria-hidden="true">
        <defs>
            <style dangerouslySetInnerHTML={{ __html: `
              .cls-1 {
                fill: #0178e0;
              }
              .cls-2 {
                fill: #0cafef;
              }
            `}} />
            <filter id="logo-glow" x="-50%" y="-50%" width="200%" height="200%">
                <feGaussianBlur stdDeviation="3.5" result="coloredBlur" />
                <feMerge>
                    <feMergeNode in="coloredBlur" />
                    <feMergeNode in="SourceGraphic" />
                </feMerge>
            </filter>
        </defs>
        <g filter="url(#logo-glow)">
            <path className="cls-2" d="M77.13,1.28c-13.1,2.79-25.1,10.11-34.58,21.31-10.75,12.68-17.11,29.04-18.22,46.55h0c2.22-25.29,19.64-45.04,40.73-45.04,4.11,0,8.17.77,12.05,2.25,4.24,1.63,8.25,4.09,11.87,7.31,2.27,2.02,5.13,3.07,7.99,3.07,2.41,0,4.83-.74,6.9-2.27l.52-.38c1.6-1.18,2.8-2.67,3.6-4.32,2.19-4.53,1.33-10.23-2.73-13.88-8.22-7.39-17.86-12.4-28.14-14.6h0Z"/>
            <path className="cls-1" d="M77.08,147.96c-3.89.86-7.91,1.3-12,1.3-17.77,0-34.35-8.03-46.69-22.6C6.53,112.68,0,94.2,0,74.63S6.53,36.59,18.39,22.59C30.73,8.02,47.31,0,65.08,0c4.08,0,8.11.43,12.06,1.28-13.1,2.79-25.1,10.11-34.57,21.31-10.75,12.68-17.11,29.04-18.21,46.55v.02c-.17,1.8-.24,3.62-.24,5.47s.08,3.67.24,5.47h0c1.09,17.53,7.47,33.89,18.21,46.57,9.47,11.18,21.44,18.51,34.52,21.3Z"/>
            <path className="cls-2" d="M126.73,187.89c-3.2,18.85-17.11,34.33-35.5,39.13-2.85.74-5.79,1.21-8.83,1.42-1.1.08-2.18.12-3.26.12-15.36,0-29.47-7.28-38.45-19.04-1.61-2.1-2.35-4.54-2.35-6.92s.68-4.55,1.97-6.46c1.32-1.99,3.27-3.57,5.76-4.44,1.43-.5,2.91-.75,4.37-.75,3.79,0,7.48,1.61,9.95,4.64.86,1.04,1.82,2.04,2.85,2.93,4.31,3.74,9.91,5.93,15.88,5.93.27,0,.55,0,.83-.01.27,0,.54-.03.81-.04.54-.03,1.08-.06,1.62-.12h.01c4.04-.25,8.01-.79,11.89-1.59,11.75-2.42,22.64-7.31,31.85-14.35h0c.19-.15.39-.3.58-.45Z"/>
            <path className="cls-1" d="M127.44,90.81v88.78c0,1.55-.08,3.07-.22,4.58-.23,1.43-.59,2.82-1.07,4.16h0c-9.21,7.05-20.1,11.94-31.85,14.36-3.88.8-7.85,1.34-11.89,1.59h-.01c-.54.05-1.08.09-1.62.12,1.62-.12,3.21-.37,4.73-.79,2.02-.55,3.95-1.37,5.72-2.4,7.26-4.19,12.15-12.03,12.15-20.99v-46.04l-.04.04v-41.39l.04-.21v-1.82h24.06Z"/>
            <path className="cls-2" d="M127.22,184.17c-.12,1.25-.28,2.5-.49,3.73-.19.15-.39.3-.58.44.48-1.34.84-2.73,1.07-4.16Z"/>
            <path className="cls-2" d="M103.28,66.7h-33.75c-3.33,0-6.34,1.35-8.52,3.53-2.18,2.19-3.52,5.19-3.52,8.52,0,2.5.75,4.81,2.06,6.74,2.16,3.21,5.83,5.32,9.99,5.32h57.9-24.16v-24.11"/>
            <path className="cls-2" d="M115.39,66.7h-12.11v24.11h24.16v-12.19c0-.28,0-.58-.03-.85,0-.1-.02-.18-.02-.26-.23-2.29-1.11-4.39-2.46-6.12-1.72-2.22-4.21-3.84-7.08-4.43-.13-.02-.24-.05-.37-.07-.67-.12-1.38-.19-2.09-.19"/>
            <path className="cls-2" d="M103.33,92.83v41.39c-.37.34-.74.67-1.12,1-.28.24-.57.49-.86.72l-.07.06c-.14.11-.27.21-.4.33-.17.13-.32.26-.48.39-1.02.81-2.04,1.59-3.09,2.32-.39.27-.79.54-1.19.8-.14.09-.26.19-.4.27-.08.05-.15.09-.22.14-.13.09-.26.17-.39.25-.29.2-.59.38-.89.56-.23.15-.48.29-.72.43-.34.2-.69.41-1.04.61-.56.31-1.11.61-1.67.9-.67.35-1.36.69-2.04,1.01-.46.21-.92.42-1.39.62-.08.04-.17.08-.25.11-.39.18-.79.34-1.19.5-.57.23-1.14.46-1.73.66-.58.21-1.15.41-1.74.61h0c-.59.2-1.17.37-1.77.55-.6.18-1.19.33-1.79.49-.6.16-1.2.29-1.81.43-13.08-2.79-25.05-10.12-34.52-21.3-10.75-12.68-17.12-29.04-18.21-46.56,2.22,25.29,19.64,45.06,40.73,45.06,3.21,0,6.35-.2,9.39-.73,1.31-.21,2.58-.51,3.84-.85.14-.04.28-.07.43-.11,11.08-3.16,20.22-11.5,24.6-30.64Z"/>
        </g>
    </svg>
);


// A wrapper component to select the correct logo based on the theme.
const Logo = ({ theme }: { theme: Theme }) => {
    return theme === 'light' ? <LogoLight /> : <LogoDark />;
};

const WhoIcon = () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" aria-hidden="true">
        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
        <circle cx="12" cy="7" r="4"></circle>
    </svg>
);

const WhatIcon = () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" aria-hidden="true">
        <rect x="3" y="3" width="7" height="7"></rect>
        <rect x="14" y="3" width="7" height="7"></rect>
        <rect x="14" y="14" width="7" height="7"></rect>
        <rect x="3" y="14" width="7" height="7"></rect>
    </svg>
);

const HowIcon = () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" aria-hidden="true">
        <path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"></path>
        <line x1="16" y1="8" x2="2" y2="22"></line>
        <line x1="17.5" y1="15" x2="9" y2="15"></line>
    </svg>
);


export const Navbar = ({ theme, toggleTheme }: NavbarProps) => {
    const { t } = useLanguage();

    return (
        <nav className="site-navbar">
            <div className="navbar-logo">
                <a href="#" aria-label="Homepage">
                    <Logo theme={theme} />
                </a>
            </div>
            <div className="navbar-links">
                <a href="#" className="navbar-link">
                    <span className="navbar-icon-wrapper"><WhoIcon /></span>
                    <span className="navbar-link-text">{t('navWho')}</span>
                </a>
                <a href="#" className="navbar-link">
                    <span className="navbar-icon-wrapper"><WhatIcon /></span>
                    <span className="navbar-link-text">{t('navWhat')}</span>
                </a>
                <a href="#" className="navbar-link active" aria-current="page">
                    <span className="navbar-icon-wrapper"><HowIcon /></span>
                    <span className="navbar-link-text">{t('navHow')}</span>
                </a>
            </div>
            <div className="navbar-controls">
                <ThemeToggle theme={theme} toggleTheme={toggleTheme} />
                <LanguageToggle />
            </div>
        </nav>
    );
}